{"ast":null,"code":"var _jsxFileName = \"/Users/guillaumemacbookpro/Desktop/p10 724Event/src/containers/Form/index.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Field, { FIELD_TYPES } from \"../../components/Field\";\nimport Select from \"../../components/Select\";\nimport Button, { BUTTON_TYPES } from \"../../components/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mockContactApi = () => new Promise(resolve => {\n  setTimeout(resolve, 1000);\n});\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    onSuccess,\n    onError\n  } = _ref;\n  const [sending, setSending] = useState(false);\n  const [nom, setNom] = useState(\"\"); // Ajout d'états locaux pour chaque champ\n\n  const [prenom, setPrenom] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const sendContact = useCallback(async evt => {\n    evt.preventDefault();\n    setSending(true); // We try to call mockContactApi\n\n    try {\n      await mockContactApi();\n      setSending(false);\n      onSuccess();\n      setNom(\"\");\n      setPrenom(\"\");\n      setType(\"\");\n      setEmail(\"\");\n      setMessage(\"\");\n    } catch (err) {\n      setSending(false);\n      onError(err);\n    }\n  }, [onSuccess, onError]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: sendContact,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"\",\n          label: \"Nom\",\n          onChange: e => setNom(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"\",\n          label: \"Pr\\xE9nom\",\n          onChange: e => setPrenom(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          selection: [\"Personel\", \"Entreprise\"],\n          label: \"Personel / Entreprise\",\n          type: \"large\",\n          titleEmpty: true,\n          value: type,\n          onChange: e => setType(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"\",\n          label: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: BUTTON_TYPES.SUBMIT,\n          disabled: sending,\n          children: sending ? \"En cours\" : \"Envoyer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"message\",\n          label: \"Message\",\n          type: FIELD_TYPES.TEXTAREA\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"o3OOMq2cCuG+TWq8abHpTjs/VEY=\");\n\n_c = Form;\nForm.propTypes = {\n  onError: PropTypes.func,\n  onSuccess: PropTypes.func\n};\nForm.defaultProps = {\n  onError: () => null,\n  onSuccess: () => null\n};\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/guillaumemacbookpro/Desktop/p10 724Event/src/containers/Form/index.js"],"names":["useCallback","useState","PropTypes","Field","FIELD_TYPES","Select","Button","BUTTON_TYPES","mockContactApi","Promise","resolve","setTimeout","Form","onSuccess","onError","sending","setSending","nom","setNom","prenom","setPrenom","type","setType","email","setEmail","message","setMessage","sendContact","evt","preventDefault","err","e","target","value","SUBMIT","TEXTAREA","propTypes","func","defaultProps"],"mappings":"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","sourcesContent":["import { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Field, { FIELD_TYPES } from \"../../components/Field\";\nimport Select from \"../../components/Select\";\nimport Button, { BUTTON_TYPES } from \"../../components/Button\";\n\nconst mockContactApi = () =>\n  new Promise((resolve) => {\n    setTimeout(resolve, 1000);\n  });\n\nconst Form = ({ onSuccess, onError }) => {\n  const [sending, setSending] = useState(false);\n\n  const [nom, setNom] = useState(\"\"); // Ajout d'états locaux pour chaque champ\n  const [prenom, setPrenom] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const sendContact = useCallback(\n    async (evt) => {\n      evt.preventDefault();\n\n      setSending(true);\n      // We try to call mockContactApi\n      try {\n        await mockContactApi();\n        setSending(false);\n        onSuccess();\n\n        setNom(\"\");\n        setPrenom(\"\");\n        setType(\"\");\n        setEmail(\"\");\n        setMessage(\"\");\n      } catch (err) {\n        setSending(false);\n        onError(err);\n      }\n    },\n    [onSuccess, onError]\n  );\n  return (\n    <form onSubmit={sendContact}>\n      <div className=\"row\">\n        <div className=\"col\">\n          <Field\n            placeholder=\"\"\n            label=\"Nom\"\n            onChange={(e) => setNom(e.target.value)}\n          />\n          <Field\n            placeholder=\"\"\n            label=\"Prénom\"\n            onChange={(e) => setPrenom(e.target.value)}\n          />\n          <Select\n            selection={[\"Personel\", \"Entreprise\"]}\n            label=\"Personel / Entreprise\"\n            type=\"large\"\n            titleEmpty\n            value={type}\n            onChange={(e) => setType(e.target.value)}\n          />\n          <Field placeholder=\"\" label=\"Email\" />\n          <Button type={BUTTON_TYPES.SUBMIT} disabled={sending}>\n            {sending ? \"En cours\" : \"Envoyer\"}\n          </Button>\n        </div>\n        <div className=\"col\">\n          <Field\n            placeholder=\"message\"\n            label=\"Message\"\n            type={FIELD_TYPES.TEXTAREA}\n          />\n        </div>\n      </div>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  onError: PropTypes.func,\n  onSuccess: PropTypes.func,\n};\n\nForm.defaultProps = {\n  onError: () => null,\n  onSuccess: () => null,\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}