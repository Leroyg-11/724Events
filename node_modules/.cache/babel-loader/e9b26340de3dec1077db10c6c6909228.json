{"ast":null,"code":"var _jsxFileName = \"/Users/guillaumemacbookpro/Desktop/p10 724Event/src/containers/Form/index.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Field, { FIELD_TYPES } from \"../../components/Field\";\nimport Select from \"../../components/Select\";\nimport Button, { BUTTON_TYPES } from \"../../components/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mockContactApi = () => new Promise(resolve => {\n  setTimeout(resolve, 1000);\n});\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    onSuccess,\n    onError\n  } = _ref;\n  const [formValues, setFormValues] = useState({\n    nom: \"\",\n    prenom: \"\",\n    type: \"\",\n    email: \"\",\n    message: \"\"\n  });\n  const [sending, setSending] = useState(false);\n  const sendContact = useCallback(async evt => {\n    evt.preventDefault();\n    setSending(true); // We try to call mockContactApi\n\n    try {\n      await mockContactApi();\n      setSending(false);\n      onSuccess();\n    } catch (err) {\n      setSending(false);\n      onError(err);\n    }\n  }, [onSuccess, onError]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: sendContact,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"\",\n          label: \"Nom\",\n          value: formValues.nom,\n          onChange: e => setFormValues({ ...formValues,\n            nom: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"\",\n          label: \"Pr\\xE9nom\",\n          value: formValues.prenom,\n          onChange: e => setFormValues({ ...formValues,\n            prenom: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          selection: [\"Personel\", \"Entreprise\"],\n          onChange: selectedValue => setFormValues({ ...formValues,\n            type: selectedValue\n          }),\n          label: \"Personel / Entreprise\",\n          type: \"large\",\n          titleEmpty: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"\",\n          label: \"Email\",\n          value: formValues.email,\n          onChange: e => setFormValues({ ...formValues,\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: BUTTON_TYPES.SUBMIT,\n          disabled: sending,\n          children: sending ? \"En cours\" : \"Envoyer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"message\",\n          label: \"Message\",\n          type: FIELD_TYPES.TEXTAREA,\n          value: formValues.message,\n          onChange: e => setFormValues({ ...formValues,\n            message: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"6qlcflkyxgtALIf9ydH1ZE/zy4E=\");\n\n_c = Form;\nForm.propTypes = {\n  onError: PropTypes.func,\n  onSuccess: PropTypes.func\n};\nForm.defaultProps = {\n  onError: () => null,\n  onSuccess: () => null\n};\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/guillaumemacbookpro/Desktop/p10 724Event/src/containers/Form/index.js"],"names":["useCallback","useState","PropTypes","Field","FIELD_TYPES","Select","Button","BUTTON_TYPES","mockContactApi","Promise","resolve","setTimeout","Form","onSuccess","onError","formValues","setFormValues","nom","prenom","type","email","message","sending","setSending","sendContact","evt","preventDefault","err","e","target","value","selectedValue","SUBMIT","TEXTAREA","propTypes","func","defaultProps"],"mappings":"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","sourcesContent":["import { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Field, { FIELD_TYPES } from \"../../components/Field\";\nimport Select from \"../../components/Select\";\nimport Button, { BUTTON_TYPES } from \"../../components/Button\";\n\nconst mockContactApi = () =>\n  new Promise((resolve) => {\n    setTimeout(resolve, 1000);\n  });\n\nconst Form = ({ onSuccess, onError }) => {\n  const [formValues, setFormValues] = useState({\n    nom: \"\",\n    prenom: \"\",\n    type: \"\",\n    email: \"\",\n    message: \"\",\n  });\n\n  const [sending, setSending] = useState(false);\n  const sendContact = useCallback(\n    async (evt) => {\n      evt.preventDefault();\n\n      setSending(true);\n      // We try to call mockContactApi\n      try {\n        await mockContactApi();\n        setSending(false);\n\n        onSuccess();\n      } catch (err) {\n        setSending(false);\n        onError(err);\n      }\n    },\n    [onSuccess, onError]\n  );\n  return (\n    <form onSubmit={sendContact}>\n      <div className=\"row\">\n        <div className=\"col\">\n          <Field\n            placeholder=\"\"\n            label=\"Nom\"\n            value={formValues.nom}\n            onChange={(e) =>\n              setFormValues({ ...formValues, nom: e.target.value })\n            }\n          />\n          <Field\n            placeholder=\"\"\n            label=\"PrÃ©nom\"\n            value={formValues.prenom}\n            onChange={(e) =>\n              setFormValues({ ...formValues, prenom: e.target.value })\n            }\n          />\n          <Select\n            selection={[\"Personel\", \"Entreprise\"]}\n            onChange={(selectedValue) =>\n              setFormValues({ ...formValues, type: selectedValue })\n            }\n            label=\"Personel / Entreprise\"\n            type=\"large\"\n            titleEmpty\n          />\n          <Field\n            placeholder=\"\"\n            label=\"Email\"\n            value={formValues.email}\n            onChange={(e) =>\n              setFormValues({ ...formValues, email: e.target.value })\n            }\n          />\n          <Button type={BUTTON_TYPES.SUBMIT} disabled={sending}>\n            {sending ? \"En cours\" : \"Envoyer\"}\n          </Button>\n        </div>\n        <div className=\"col\">\n          <Field\n            placeholder=\"message\"\n            label=\"Message\"\n            type={FIELD_TYPES.TEXTAREA}\n            value={formValues.message}\n            onChange={(e) =>\n              setFormValues({ ...formValues, message: e.target.value })\n            }\n          />\n        </div>\n      </div>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  onError: PropTypes.func,\n  onSuccess: PropTypes.func,\n};\n\nForm.defaultProps = {\n  onError: () => null,\n  onSuccess: () => null,\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}